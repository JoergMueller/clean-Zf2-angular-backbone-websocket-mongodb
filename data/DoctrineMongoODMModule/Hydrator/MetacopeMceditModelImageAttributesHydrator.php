<?php

namespace DoctrineMongoODMModule\Hydrator;

use Doctrine\ODM\MongoDB\DocumentManager;
use Doctrine\ODM\MongoDB\Mapping\ClassMetadata;
use Doctrine\ODM\MongoDB\Hydrator\HydratorInterface;
use Doctrine\ODM\MongoDB\UnitOfWork;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ODM. DO NOT EDIT THIS FILE.
 */
class MetacopeMceditModelImageAttributesHydrator implements HydratorInterface
{
    private $dm;
    private $unitOfWork;
    private $class;

    public function __construct(DocumentManager $dm, UnitOfWork $uow, ClassMetadata $class)
    {
        $this->dm = $dm;
        $this->unitOfWork = $uow;
        $this->class = $class;
    }

    public function hydrate($document, $data, array $hints = array())
    {
        $hydratedData = array();

        /** @Field(type="string") */
        if (isset($data['copyright'])) {
            $value = $data['copyright'];
            $return = (string) $value;
            $this->class->reflFields['copyright']->setValue($document, $return);
            $hydratedData['copyright'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['expire'])) {
            $value = $data['expire'];
            if ($value === null) { $return = null; } else { $return = \Doctrine\ODM\MongoDB\Types\DateType::getDateTime($value); }
            $this->class->reflFields['expire']->setValue($document, clone $return);
            $hydratedData['expire'] = $return;
        }

        /** @Field(type="hash") */
        if (isset($data['title'])) {
            $value = $data['title'];
            $return = $value;
            $this->class->reflFields['title']->setValue($document, $return);
            $hydratedData['title'] = $return;
        }

        /** @Field(type="hash") */
        if (isset($data['alt'])) {
            $value = $data['alt'];
            $return = $value;
            $this->class->reflFields['alt']->setValue($document, $return);
            $hydratedData['alt'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['georeverse'])) {
            $value = $data['georeverse'];
            $return = (string) $value;
            $this->class->reflFields['georeverse']->setValue($document, $return);
            $hydratedData['georeverse'] = $return;
        }

        /** @Field(type="hash") */
        if (isset($data['tag'])) {
            $value = $data['tag'];
            $return = $value;
            $this->class->reflFields['tag']->setValue($document, $return);
            $hydratedData['tag'] = $return;
        }
        return $hydratedData;
    }
}